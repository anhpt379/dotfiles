#!/bin/bash

git rev-parse HEAD >/dev/null || exit 1

get_branch_name="echo -n {} | sed -E 's/ \*$//'"

if [ "$(uname -s)" = 'Darwin' ]; then
  copy_cmd="${get_branch_name} | xargs | tr -d '\n' | pbcopy"
else
  copy_cmd="${get_branch_name} | xargs | tr -d '\n' | nc 127.0.0.1 2224 --send-only"
fi

preview_cmd="${get_branch_name} | \
  xargs -I $ \
    git log -n 50 \
      --color=always \
      --date=relative \
      --abbrev=7 \
      --pretty='format:%C(auto,blue)%>(12,trunc)%ad %C(auto,yellow)%h %C(auto,green)%aN %C(auto,reset)%s%C(auto,red)% gD% D' \
      $ --"

red="$(tput setaf 1)"
reset="$(tput sgr0)"
result=$(
  git branch --sort=-committerdate |
    grep -v HEAD |
    awk '{ print $2 " " $1 }' |
    sed 's/^ //' |
    fzf --height=100% \
      --preview-window=right:75%,border-sharp \
      --exact \
      --print-query \
      --expect=ctrl-d \
      --preview="${preview_cmd}" \
      --header="${red}CTRL-/${reset} to toggle preview, ${red}CTRL-Y${reset} to yank, ${red}CTRL-D${reset} to delete branch" \
      --prompt="> "
      --bind="ctrl-/:toggle-preview" \
      --bind="ctrl-y:execute-silent/${copy_cmd}/+abort"
)

key=$(echo "${result}" | xargs | cut -d' ' -f1)
branch_name=$(echo "${result}" | xargs | cut -d' ' -f2- | sed 's/.* //')

if [ "${key}" = "ctrl-d" ]; then
  if [ "$(git branch --show-current)" = "${branch_name}" ]; then
    git checkout master && git branch -D "${branch_name}"
  else
    git branch -D "${branch_name}"
  fi
elif [ -n "${branch_name}" ]; then
  if git show-ref --verify --quiet refs/heads/"${branch_name}"; then
    git checkout "${branch_name}" && git pull --rebase origin master || git rebase --abort
  else
    git checkout -b "${branch_name}"
  fi
fi
