# Override tmux-sensible default-terminal value
set -g default-terminal xterm-kitty

# Fix slow new pane creation
# https://github.com/tmux/tmux/issues/1087#issuecomment-331949035
set -g default-command fish

# Hide tmux messages after 1s
set -g display-time 1000

# Fix fish_title doesn't work in tmux
set -g set-titles on
set -g set-titles-string '#T'

# Set vi mode for copy mode
set -g mode-keys vi

# Start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set -g pane-base-index 1

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# Higher history limit
set -g history-limit 100000

# Watch for activities on other tabs
set -g monitor-activity on

# Don't suspend-client
unbind C-z

# Styles
set -g mode-style                    'bg=#28c9ff fg=black'
set -g copy-mode-current-match-style 'bg=#fab955 fg=black'
set -g copy-mode-match-style         'bg=#ffcc66 fg=black'
set -g message-style                 'bg=black fg=yellow blink'
set -g pane-active-border-style      'bg=#0c0c0c fg=#464646'
set -g pane-border-style             'bg=#0c0c0c fg=#464646'
set -g status-style                  'bg=black fg=white none'
set -g status-justify                left

# OS specific settings
if-shell '[[ $(hostname) == *lima* ]]' {
  set -g status-position              top
  set -g status-left                  ''
  set -g window-status-separator      ' '
  set -g window-status-format         '#[bg=#444444 fg=#999999]   #{window_name}   '
  set -g window-status-current-format '#[bg=#ffffff fg=#000000]   #{window_name}   '

  # Local tmux keymappings
  # Tmux prefix: Option+Shift (Command is mapped to Option+Shift in Kitty)
  bind -T root M-T new-window
  bind -T root M-W kill-pane
  bind -T root M-N next-window
  bind -T root M-P previous-window
  bind -T root M-S split-window -v -p 25 -c '#{pane_current_path}'
  bind -T root M-R { source ~/.tmux.conf; display '~/.tmux.conf reloaded' }

  bind -T root M-~ last-window
  bind -T root M-! select-window -t 1
  bind -T root M-@ select-window -t 2
  bind -T root M-# select-window -t 3
  bind -T root M-$ select-window -t 4
  bind -T root M-% select-window -t 5
  bind -T root M-^ select-window -t 6
  bind -T root M-& select-window -t 7
  bind -T root M-* select-window -t 8
  bind -T root M-( select-window -t 9
  bind -T root M-\{ { swap-window -t -1; select-window -t -1 }
  bind -T root M-\} { swap-window -t +1; select-window -t +1 }

  bind -T root M-` select-pane -U

  bind -T root M-_ resize-pane -D
  bind -T root M-+ resize-pane -U

  bind -T root M-\; command-prompt
  bind -T root M-?  { copy-mode -eH; send \? }
  bind -T root M-/  { copy-mode -eH; send \/ }

} {
  set -g status-position              bottom
  set -g status-left                  ' ⧉ '
  set -g status-left-length           40
  set -g window-status-format         '#{?window_activity_flag,#[fg=yellow],#[bg=#222222 fg=#999999]}#{?window_bell_flag,#[fg=yellow],#[bg=#222222 fg=#999999]}  #{window_name}  '
  set -g window-status-current-format '#[bg=#eeeeee fg=#000000 bold]  #{window_name}  '

  # Fix ssh agent when tmux is detached
  set    -g update-environment -r
  setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock
  setenv -g SSH_TTY $HOME/.ssh/ssh_tty

  # Remote key mappings
  # Tmux prefix: Option
  bind -T root M-t new-window
  bind -T root M-w kill-pane
  bind -T root M-n next-window
  bind -T root M-p previous-window
  bind -T root M-s split-window -v -p 25 -c '#{pane_current_path}'
  bind -T root M-r { source ~/.tmux.conf; display '~/.tmux.conf reloaded' }

  bind -T root M-` last-window
  bind -T root M-1 select-window -t 1
  bind -T root M-2 select-window -t 2
  bind -T root M-3 select-window -t 3
  bind -T root M-4 select-window -t 4
  bind -T root M-5 select-window -t 5
  bind -T root M-6 select-window -t 6
  bind -T root M-7 select-window -t 7
  bind -T root M-8 select-window -t 8
  bind -T root M-9 select-window -t 9
  bind -T root M-[ { swap-window -t -1; select-window -t -1 }
  bind -T root M-] { swap-window -t +1; select-window -t +1 }

  bind -T root M-- resize-pane -D
  bind -T root M-= resize-pane -U

  bind -T root M-: command-prompt
}

# Replace the default prefix key binding
set -g prefix M-Space

# Turn on mouse mode
set -g mouse on

# Fix osc52 copy to clipboard doesn't work in tmux
set -g set-clipboard on
set -g escape-time 100

# Fix Home/End key doesn't work in tmux
# https://stackoverflow.com/a/55616731
bind -T root Home send Escape OH
bind -T root End  send Escape OF

# `p` to jump between prompts
bind -T copy-mode-vi P send -X search-backward '^(^  [~/]\S* |\[.+ .+\] )'

# Double click (or `viw`) to select the entire WORD
set -g word-separators ''

# Send copy to macOS clipboard
set -g copy-command pbcopy

# Select text to copy
bind -T root         MouseDragEnd1Pane if-shell -F '#{selection_present}' { run-shell -d 0.3; send -X copy-pipe-no-clear }
bind -T copy-mode-vi MouseDragEnd1Pane if-shell -F '#{selection_present}' { run-shell -d 0.3; send -X copy-pipe-no-clear }

# Don't clear selection on double/triple click
bind -T root         SecondClick1Pane if-shell -F '#{alternate_on}' { select-pane; send -M } { select-pane; copy-mode -eH; send -X select-word; run-shell -d 0.3; send -X copy-pipe-no-clear }
bind -T root         TripleClick1Pane if-shell -F '#{alternate_on}' { select-pane; send -M } { select-pane; copy-mode -eH; send -X select-line; run-shell -d 0.3; send -X copy-pipe-no-clear }
bind -T copy-mode-vi SecondClick1Pane { select-pane; send -X select-word; run-shell -d 0.3; send -X copy-pipe-no-clear }
bind -T copy-mode-vi TripleClick1Pane { select-pane; send -X select-line; run-shell -d 0.3; send -X copy-pipe-no-clear }

# Fix slow mouse double-click (`SecondClick` event is faster)
unbind -T root          DoubleClick1Pane
unbind -T copy-mode-vi  DoubleClick1Pane

# Copy to system clipboard with `y`
bind -T copy-mode-vi y send -X copy-pipe

# `q` to exit copy mode
bind -T copy-mode-vi q copy-mode -q

# `p` to paste from copy mode
bind -T copy-mode-vi p { copy-mode -q; paste-buffer -p }

# Mouse single click to clear selection
bind -T root         MouseDown1Pane if-shell -F '#{alternate_on}' { select-pane; send -M } { select-pane; copy-mode -eH; send -X clear-selection }
bind -T copy-mode-vi MouseDown1Pane { select-pane; send -X clear-selection }

# Scroll one line at a time, and don't extend selection on mouse scroll
bind -T copy-mode-vi WheelUpPane   { select-pane; send -X -N 1 scroll-up   }
bind -T copy-mode-vi WheelDownPane { select-pane; send -X -N 1 scroll-down }

# Vim-style text selection
bind -T copy-mode-vi C-v if-shell -F '#{selection_present}' { send -X clear-selection } { send -X begin-selection; send -X rectangle-toggle }
bind -T copy-mode-vi v   if-shell -F '#{selection_present}' { send -X clear-selection } { send -X begin-selection }
bind -T copy-mode-vi V   if-shell -F '#{selection_present}' { send -X clear-selection } { send -X select-line }

# Text objects: `viw` to select word, `vil` to select line
bind -T copy-mode-vi i switch-client -T text-object
bind -T text-object  w if-shell -F '#{selection_present}' { send -X cursor-right; send -X select-word }
bind -T text-object  l if-shell -F '#{selection_present}' { send -X select-line }

# Enable incremental search in copy-mode-vi
bind -T copy-mode-vi / command-prompt -i -p 'search down' 'send -X search-forward-incremental "%%%"'
bind -T copy-mode-vi ? command-prompt -i -p 'search up'   'send -X search-backward-incremental "%%%"'

# Hide position indicator when entering copy-mode when mouse mode is on
bind -T root WheelUpPane if-shell -F '#{||:#{pane_in_mode},#{mouse_any_flag}}' { send -M } { copy-mode -eH }

# Fix pbpaste doesn't work on remote servers
# We need a way to call `tmux refresh-client -l` on the local tmux before pasting to
# the remote one. Below are the keys I use to paste, so it should do the trick.
bind -T root p   if-shell 'echo "#{window_name}" | grep -q "ssh "' { run-shell 'tmux refresh-client -l'; send p   } { send p   }
bind -T root P   if-shell 'echo "#{window_name}" | grep -q "ssh "' { run-shell 'tmux refresh-client -l'; send P   } { send P   }
bind -T root C-p if-shell 'echo "#{window_name}" | grep -q "ssh "' { run-shell 'tmux refresh-client -l'; send C-p } { send C-p }

# Tmux plugins
set -g status-right '#{prefix_highlight}'
set -g @prefix_highlight_show_copy_mode on
set -g @prefix_highlight_copy_prompt 'COPY'
set -g @prefix_highlight_copy_mode_attr 'bg=yellow fg=black'
run-shell ~/.tmux/plugins/prefix_highlight.tmux

set -g @power_zoom_trigger M-\'
set -g @power_zoom_without_prefix 1
run-shell ~/.tmux/plugins/tmux-power-zoom/power-zoom.tmux
