

# -----------------------------------------------------------------------------
# <type>(<scope>): <short summary>
#   │       │             │
#   │       │             └─⫸ Summary in present tense.
#   │       │                 Not capitalized.
#   │       │                 No period at the end.
#   │       │
#   │       └─⫸ Commit scope (optional)
#   │
#   └─⫸ Commit type: add|cut|feat|fix|bump|build|ci|docs|\
#                    style|perf|refactor|test|chore|revert
#
# [optional body]
#
# [optional footer(s)]
# -----------------------------------------------------------------------------
#
# Answer the following questions:
#   * Why is this change necessary?
#   * How does it address the issue?
#   * What side effects does this change have?
#
# Types:
#   Must be one of the following:
#
#   * add: changes to add new capability or functions
#   * cut: removing a capability or function
#   * feat: new feature
#   * fix: a bug fix
#   * bump: the versions or dependency versions
#   * build: changes to build system or external dependencies
#   * ci: changes to CI configuration files and scripts
#   * docs: changes to the documentation
#   * style: changes to the code that do not affect the meaning
#   * perf: a code change that improves performance
#   * refactor: a code change that neither fixes a bug nor adds a feature
#   * test: adding missing tests or correcting existing tests
#   * chore: changes for housekeeping
#   * revert: reverting a commit
#
# See https://www.conventionalcommits.org/en/v1.0.0/#summary
#
# Example:
# -----------------------------------------------------------------------------
#   fix(middleware): ensure Range headers adhere more closely to RFC 2616
#
#   Add one new dependency, use `range-parser` (Express dependency) to compute
#   range. It is more well-tested in the wild.
#
#   Fixes #2310
# -----------------------------------------------------------------------------
