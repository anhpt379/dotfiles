#!/bin/bash
#
# The script appends a millisecond-resolution time stamp to all the files it
# moves to the ~/.Trash directory, both to inform the user of the time of the
# deletion, and to avoid overwrites when moving a file to trash.
#
# The script will not choke on a nonexistent file. It outputs the final
# disposition of each argument: does not exist, was already in trash, or was
# moved to trash.

trash_dir_abspath=$(realpath ~/.Trash)
if [[ -e $trash_dir_abspath ]]; then
    if [[ ! -d $trash_dir_abspath ]]; then
        echo "The file $trash_dir_abspath exists, but is not a directory. Exiting."
        exit 1
    fi
else
    mkdir "$trash_dir_abspath"
    echo "Created directory $trash_dir_abspath"
fi

for file in "$@"; do
    file_abspath=$(realpath -- "$file")
    file_basename=$(basename -- "$file_abspath")
    if [[ ! -e $file_abspath ]]; then
        echo "File does not exist: $file_abspath"
    elif [[ "$file_abspath" == "$trash_dir_abspath"* ]]; then
        echo "File already in trash: $file_abspath"
    else
        # The name of the moved file shall be the original name plus a
        # millisecond-resolution timestamp.
        beginning="$trash_dir_abspath/$file_basename"_DELETED_ON_
        move_to_abspath="$beginning$(date '+%Y-%m-%d_AT_%H:%M:%S.%3N')"
        while [[ -e "$move_to_abspath" ]]; do
            # Generate a new name with a new timestamp, as the previously
            # generated one denoted an existing file.
            move_to_abspath="$beginning$(date '+%Y-%m-%d_AT_%H:%M:%S.%3N')"
        done
        # We're now almost certain that the file denoted by name
        # $move_to_abspath does not exist. For that to be the case, an
        # extremely unlikely race condition would have had to take place:
        # some other process would have had to create a file with the name
        # $move_to_abspath after the execution of the existence test above.
        # However, to make absolute sure that moving the file to the trash
        # directory will always be successful, we shall give the '-f'
        # (force) flag to the 'mv' command.
        /bin/mv -f "$file_abspath" "$move_to_abspath"
        echo "Moved to trash: $file_abspath"
    fi
done

# vim:ft=bash:
