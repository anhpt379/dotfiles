# vim: ft=conf

set shell "bash"
set shellopts '-eu'
set ifs "\n"
set scrolloff 5

set drawbox on
set dircounts on
set hidden on
set incsearch on

set color256 on
set icons on

set ignorecase off

set promptfmt "\033[34;1m%w/\033[0m\033[1m%f\033[0m"

set previewer ~/.config/lf/preview.sh

# Fzf integration
cmd fzf_jump ${{
  dir=""
  if [ -d "$f" ]; then
    dir="$f"
  fi

  res="$(fd --color=always --no-ignore --hidden --exclude '.git' . $dir | fzf --ansi --height=100% --reverse --header='Jump to location')"

  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi

  lf -remote "send $id $cmd \"$res\""
}}

# Reveal file/dir in Finder
cmd reveal %{{
  open -R $f
}}

# extract the current file with the right command
cmd extract ${{
  set -f
  case $f in
    *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
    *.tar.gz|*.tgz) tar xzvf $f;;
    *.tar.xz|*.txz) tar xJvf $f;;
    *.zip) unzip $f;;
    *.rar) unrar x $f;;
    *.7z) 7z x $f;;
  esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
  set -f
  mkdir $1
  cp -r $fx $1
  tar czf $1.tar.gz $1
  rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
  set -f
  mkdir $1
  cp -r $fx $1
  zip -r $1.zip $1
  rm -rf $1
}}

# copy the path of the highlighted file
cmd copy_path %{{
  echo "$f" | tr -d '\n' | pbcopy
  echo "Path copied: $f"
}}

cmd copy_name %{{
  name=$(basename "$f")
  name="${name%.*}"
  echo $name | pbcopy
  echo "Name copied: $name"
}}

# NERDTree-like add file/dir
cmd new %{{
  path=$1
  if [[ "$path" =~ '/'$ ]]; then
    mkdir -p $path
    lf -remote "send reload"
    lf -remote "send cd $path"
  else
    mkdir -p "$(dirname $path)"
    touch $path
    lf -remote "send reload"
    lf -remote "send select $path"
  fi
}}

# Delete files
cmd delete %{{
  set -f
  files=$(echo $fx)
  printf " Delete $files? [y/n] "
  read ans
  if [ $ans = "y" ]; then
    for f in $fx; do
      trash $f
    done
    echo "File deleted: $files"
  else
    echo ""
  fi
}}

# Go to project root
cmd go_home %{{
  dir=$(git rev-parse --show-toplevel)
  lf -remote "send cd $dir"
}}

# Basic Functions
map <esc> unselect; clear
map <enter> open $fx
map . set hidden!
map d delete
map x cut
map c copy
map a push :new<space>
map y copy_name
map Y copy_path
map o reveal
map r :rename; cmd-word-back; cmd-left
map gh go_home
map <c-f> :fzf_jump
map t :set sortby time; set info time; set reverse
